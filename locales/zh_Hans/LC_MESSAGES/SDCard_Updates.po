# badpoi <a1635835119@gmail.com>, 2021.
# Yifei Ding <dingyifeiair@gmail.com>, 2021, 2022, 2023.
msgid ""
msgstr ""
"Report-Msgid-Bugs-To: yifeiding@protonmail.com\n"
"PO-Revision-Date: 2023-04-07 22:49+0000\n"
"Last-Translator: Yifei Ding <dingyifeiair@gmail.com>\n"
"Language-Team: Chinese (Simplified) <https://hosted.weblate.org/projects/"
"klipper/sdcard_updates/zh_Hans/>\n"
"Language: zh_Hans\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.17-dev\n"

msgid ""
"Many of today's popular controller boards ship with a bootloader capable of "
"updating firmware via SD Card. While this is convenient in many "
"circumstances, these bootloaders typically provide no other way to update "
"firmware. This can be a nuisance if your board is mounted in a location that"
" is difficult to access or if you need to update firmware often. After "
"Klipper has been initially flashed to a controller it is possible to "
"transfer new firmware to the SD Card and initiate the flashing procedure via"
" ssh."
msgstr ""
"当今许多流行的控制器板都带有能够通过 SD 卡更新固件的引导加载程序。 虽然这在很多情况下都很方便，但这些引导加载程序通常不提供其他方式来更新固件。 "
"如果您的电路板安装在很难插入SD卡的位置或者您需要经常更新固件，这可能会很麻烦。 在 Klipper 最初刷入控制器后，可以将新固件通过网络传输到 SD"
" 卡并通过 ssh 启动刷写过程。"

msgid "Typical Upgrade Procedure"
msgstr "典型的升级程序"

msgid ""
"The procedure for updating MCU firmware using the SD Card is similar to that"
" of other methods. Instead of using `make flash` it is necessary to run a "
"helper script, `flash-sdcard.sh`. Updating a BigTreeTech SKR 1.3 might look "
"like the following:"
msgstr ""
"使用 SD 卡更新 MCU 固件的过程与其他方法类似。 不需要使用`make flash`，而是需要运行一个辅助脚本`flash-sdcard.sh`。"
" 更新 BigTreeTech SKR 1.3 可能如下所示："

msgid ""
"It is up to the user to determine the device location and board name. If a "
"user needs to flash multiple boards, `flash-sdcard.sh` (or `make flash` if "
"appropriate) should be run for each board prior to restarting the Klipper "
"service."
msgstr ""
"由用户决定设备位置和电路板名称。 如果用户需要刷新多个板，在重新启动 Klipper 服务之前，应该为每个板运行 `flash-"
"sdcard.sh`（或`make flash`，如果合适）。"

msgid "Supported boards can be listed with the following command:"
msgstr "可以使用以下命令列出支持的微控制器板："

msgid ""
"If you do not see your board listed it may be necessary to add a new board "
"definition as [described below](#board-definitions)."
msgstr "如果您没有看到您的电路板列出，则可能需要添加一个新的电路板定义[如下所述](#board-definitions)。"

msgid "Advanced Usage"
msgstr "高级用法"

msgid ""
"The above commands assume that your MCU connects at the default baud rate of"
" 250000 and the firmware is located at `~/klipper/out/klipper.bin`. The "
"`flash-sdcard.sh` script provides options for changing these defaults. All "
"options can be viewed by the help screen:"
msgstr ""
"上述命令假设您的 MCU 以默认波特率 250000 连接并且固件位于`~/klipper/out/klipper.bin`。 `flash-"
"sdcard.sh` 脚本提供了更改这些默认值的选项。 所有选项都可以通过帮助画面查看："

msgid ""
"If your board is flashed with firmware that connects at a custom baud rate "
"it is possible to upgrade by specifying the `-b` option:"
msgstr "如果您的电路板使用以自定义波特率连接的固件刷新，则可以通过指定 `-b` 选项进行升级："

msgid ""
"If you wish to flash a build of Klipper located somewhere other than the "
"default location it can be done by specifying the `-f` option:"
msgstr "如果您希望闪存位于默认位置以外的其他位置的 Klipper 构建，可以通过指定 `-f` 选项来完成："

msgid ""
"Note that when upgrading a MKS Robin E3 it is not necessary to manually run "
"`update_mks_robin.py` and supply the resulting binary to `flash-sdcard.sh`. "
"This procedure is automated during the upload process."
msgstr ""
"请注意，升级 MKS Robin E3 时，无需手动运行 `update_mks_robin.py` 并将生成的二进制文件提供给 `flash-"
"sdcard.sh`。 此过程在上传过程中自动执行。"

msgid "Caveats"
msgstr "注意事项"

msgid ""
"As mentioned in the introduction, this method only works for upgrading "
"firmware. The initial flashing procedure must be done manually per the "
"instructions that apply to your controller board."
msgstr "如介绍中所述，此方法仅适用于升级固件。 初始刷鞋程序必须按照适用于您的控制器板的说明手动完成。"

msgid ""
"While it is possible to flash a build that changes the Serial Baud or "
"connection interface (ie: from USB to UART), verification will always fail "
"as the script will be unable to reconnect to the MCU to verify the current "
"version."
msgstr ""
"虽然可以刷新更改串行波特率或连接接口（即：从 USB 到 UART）的构建，但验证终将失败，因为脚本将无法重新连接到 MCU 以验证当前版本。"

msgid "Board Definitions"
msgstr "电路板定义"

msgid ""
"Most common boards should be available, however it is possible to add a new "
"board definition if necessary. Board definitions are located in "
"`~/klipper/scripts/spi_flash/board_defs.py`. The definitions are stored in "
"dictionary, for example:"
msgstr ""
"大多数常见的电路板都应该可用，但如有必要，可以添加新的电路板定义。 "
"板定义位于`~/klipper/scripts/spi_flash/board_defs.py`。 定义存储在字典中，例如："

msgid "The following fields may be specified:"
msgstr "可以指定以下字段："

msgid ""
"`firmware_path`: The path on the SD Card where firmware should be "
"transferred. The default is `firmware.bin`."
msgstr "`firmware_path`：SD 卡上固件应传输的路径。 默认是`firmware.bin`。"

msgid ""
"`spi_pins`: This should be 3 comma separated pins that are connected to the "
"SD Card in the format of `miso,mosi,sclk`."
msgstr "`spi_pins`：这应该是 3 个逗号分隔的引脚，以 `miso,mosi,sclk` 的格式连接到 SD 卡。"

msgid ""
"Prior to creating a new board definition one should check to see if an "
"existing board definition meets the criteria necessary for the new board. If"
" this is the case, a `BOARD_ALIAS` may be specified. For example, the "
"following alias may be added to specify `my-new-board` as an alias for "
"`generic-lpc1768`:"
msgstr ""
"在创建新板定义之前，应检查现有板定义是否满足新板所需的标准。 如果是这种情况，可以指定`BOARD_ALIAS`。 例如，可以添加以下别名来指定“my-"
"new-board”作为“generic-lpc1768”的别名："

msgid ""
"If you need a new board definition and you are uncomfortable with the "
"procedure outlined above it is recommended that you request one in the "
"[Klipper Community Discord](Contact.md#discord)."
msgstr ""
"如果您需要一个新的电路板定义并且您对上述过程感到不舒服，建议您在 [Klipper Community "
"Discord](Contact.md#discord) 中请求一个。"

msgid ""
"sudo service klipper stop\n"
"cd ~/klipper\n"
"git pull\n"
"make clean\n"
"make menuconfig\n"
"make\n"
"./scripts/flash-sdcard.sh /dev/ttyACM0 btt-skr-v1.3\n"
"sudo service klipper start\n"
msgstr ""
"sudo service klipper stop\n"
"cd ~/klipper\n"
"git pull\n"
"make clean\n"
"make menuconfig\n"
"make\n"
"./scripts/flash-sdcard.sh /dev/ttyACM0 btt-skr-v1.3\n"
"sudo service klipper start\n"

msgid "./scripts/flash-sdcard.sh -l\n"
msgstr "./scripts/flash-sdcard.sh -l\n"

msgid "./scripts/flash-sdcard.sh -b 115200 /dev/ttyAMA0 btt-skr-v1.3\n"
msgstr "./scripts/flash-sdcard.sh -b 115200 /dev/ttyAMA0 btt-skr-v1.3\n"

msgid ""
"./scripts/flash-sdcard.sh -f ~/downloads/klipper.bin /dev/ttyAMA0 btt-"
"skr-v1.3\n"
msgstr ""
"./scripts/flash-sdcard.sh -f ~/downloads/klipper.bin /dev/ttyAMA0 btt-"
"skr-v1.3\n"

msgid ""
"BOARD_DEFS = {\n"
"    'generic-lpc1768': {\n"
"        'mcu': \"lpc1768\",\n"
"        'spi_bus': \"ssp1\",\n"
"        \"cs_pin\": \"P0.6\"\n"
"    },\n"
"    ...<further definitions>\n"
"}\n"
msgstr ""
"BOARD_DEFS = {\n"
"    'generic-lpc1768': {\n"
"        'mcu': \"lpc1768\",\n"
"        'spi_bus': \"ssp1\",\n"
"        \"cs_pin\": \"P0.6\"\n"
"    },\n"
"    ...<更多定义>\n"
"}\n"

msgid ""
"BOARD_ALIASES = {\n"
"    ...<previous aliases>,\n"
"    'my-new-board': BOARD_DEFS['generic-lpc1768'],\n"
"}\n"
msgstr ""
"BOARD_ALIASES = {\n"
"    ...<原先的别名>,\n"
"    'my-new-board': BOARD_DEFS['generic-lpc1768'],\n"
"}\n"

#: docs/SDCard_Updates.md:block 1 (header)
msgid "SDCard updates"
msgstr "通过SD卡更新"

#: docs/SDCard_Updates.md:block 12 (code)
msgid ""
"./scripts/flash-sdcard.sh -h\n"
"SD Card upload utility for Klipper\n"
"\n"
"usage: flash_sdcard.sh [-h] [-l] [-c] [-b <baud>] [-f <firmware>]\n"
"                       <device> <board>\n"
"\n"
"positional arguments:\n"
"  <device>        device serial port\n"
"  <board>         board type\n"
"\n"
"optional arguments:\n"
"  -h              show this message\n"
"  -l              list available boards\n"
"  -c              run flash check/verify only (skip upload)\n"
"  -b <baud>       serial baud rate (default is 250000)\n"
"  -f <firmware>   path to klipper.bin\n"
msgstr ""
"./scripts/flash-sdcard.sh -h\n"
"Klipper SD卡上传工具\n"
"\n"
"usage: flash_sdcard.sh [-h] [-l] [-c] [-b <波特率>] [-f <固件>]\n"
"                       <设备> <控制板>\n"
"\n"
"位置参数：\n"
"  <设备>        设备串口\n"
"  <控制板>         控制板类型\n"
"\n"
"可选参数：\n"
"  -h              显示此信息\n"
"  -l              列出可用控制板\n"
"  -c              进行闪存检查/仅验证（跳过上传）\n"
"  -b <波特率>      串口波特率 (默认为250000)\n"
"  -f <firmware>   klipper.bin文件路径\n"

#: docs/SDCard_Updates.md:block 18 (paragraph)
msgid ""
"The `-c` option is used to perform a check or verify-only operation to test "
"if the board is running the specified firmware correctly. This option is "
"primarily intended for cases where a manual power-cycle is necessary to "
"complete the flashing procedure, such as with bootloaders that use SDIO mode"
" instead of SPI to access their SD Cards. (See Caveats below) But, it can "
"also be used anytime to verify if the code flashed into the board matches "
"the version in your build folder on any supported board."
msgstr ""
"`-c` 选项用于执行检查或只验证的操作，以测试控制板是否正确运行指定的固件。这个"
"选项主要是针对需要手动断电来完成刷写程序的情况，比如使用SDIO模式而不是SPI来访"
"问SD卡的引导程序。(见下面的注意事项）但是，它也可以在任何时候用来验证在任何支"
"持的板子上刷入板子的固件是否与你的构建文件夹中的版本一致。"

#: docs/SDCard_Updates.md:block 20 (unordered list)
msgid ""
"Only boards that use SPI for SD Card communication are supported. Boards "
"that use SDIO, such as the Flymaker Flyboard and MKS Robin Nano V1/V2, will "
"not work in SDIO mode. However, it's usually possible to flash such boards "
"using Software SPI mode instead. But if the board's bootloader only uses "
"SDIO mode to access the SD Card, a power-cycle of the board and SD Card will"
" be necessary so that the mode can switch from SPI back to SDIO to complete "
"reflashing. Such boards should be defined with `skip_verify` enabled to skip"
" the verify step immediately after flashing. Then after the manual power-"
"cycle, you can rerun the exact same `./scripts/flash-sdcard.sh` command, but"
" add the `-c` option to complete the check/verify operation. See [Flashing "
"Boards that use SDIO](#flashing-boards-that-use-sdio) for examples."
msgstr ""
"只支持使用SPI进行SD卡通信的控制板。使用SDIO的控制，如Flymaker Flyboard和MKS "
"Robin Nano V1/V2，将不能在SDIO模式下工作。然而，通常可以使用软件 SPI "
"模式来刷写这种板子。但是如果板子的 bootloader 只支持使用SDIO模式来访问SD卡，"
"就需要对板子和SD卡进行电源循环，以便模式可以从SPI切换回SDIO来完成重新刷写。这"
"样的板子应该在定义时启用`skip_verify` "
"，以便在刷写后立即跳过验证步骤。然后在手动断电后，你可以重新运行完全相同的`./"
"scripts/flash-sdcard.sh` 命令，但加入`-c` "
"选项来完成检查/验证操作。请参阅[刷写使用SDIO的控制板](#flashing-boards-that-"
"use-sdio)以了解实例。"

#: docs/SDCard_Updates.md:block 25 (unordered list)
msgid ""
"`current_firmware_path`: The path on the SD Card where the renamed firmware "
"file is located after a successful flash. The default is `firmware.cur`."
msgstr "`current_firmware_path` "
"：刷写成功后，SD卡上重命名的固件文件所在的路径。默认是`firmware.cur` 。"

#: docs/SDCard_Updates.md:block 25 (unordered list)
msgid ""
"`skip_verify`: This defines a boolean value which tells the scripts to skip "
"the firmware verification step during the flashing process. The default is "
"`False`. It can be set to `True` for boards that require a manual power-"
"cycle to complete flashing. To verify the firmware afterward, run the script"
" again with the `-c` option to perform the verification step. [See caveats "
"with SDIO cards](#caveats)"
msgstr ""
"`skip_verify`: "
"定义了一个布尔值，它告诉脚本在刷写过程中跳过固件验证步骤。默认值是`False` "
"。对于需要手动断电才能完成刷写的控制板，它可以被设置为`True` "
"。要想在之后验证固件，可以用`-c` "
"选项再次运行脚本来执行验证步骤。[参见SDIO卡的注意事项](#caveats)"

#: docs/SDCard_Updates.md:block 26 (paragraph)
msgid ""
"If software SPI is required, the `spi_bus` field should be set to `swspi` "
"and the following additional field should be specified:"
msgstr "如果需要软件 SPI，`spi_bus` 字段应设置为 `swspi`，并应指定以下附加字段："

#: docs/SDCard_Updates.md:block 28 (paragraph)
msgid ""
"It should be exceedingly rare that Software SPI is necessary, typically only"
" boards with design errors or boards that normally only support SDIO mode "
"for their SD Card will require it. The `btt-skr-pro` board definition "
"provides an example of the former, and the `btt-octopus-f446-v1` board "
"definition provides an example of the latter."
msgstr ""
"通常只有设计错误或只支持SD卡的SDIO模式的控制板才会需要软件SPI，这种情况极为罕"
"见。`btt-skr-pro` 控制板定义提供了前者的例子，`btt-octopus-f446-v1` "
"控制板定义提供了后者的例子。"

#: docs/SDCard_Updates.md:block 32 (header)
msgid "Flashing Boards that use SDIO"
msgstr "刷写使用SDIO的控制板"

#: docs/SDCard_Updates.md:block 33 (paragraph)
msgid ""
"[As mentioned in the Caveats](#caveats), boards whose bootloader uses SDIO "
"mode to access their SD Card require a power-cycle of the board, and "
"specifically the SD Card itself, in order to switch from the SPI Mode used "
"while writing the file to the SD Card back to SDIO mode for the bootloader "
"to flash it into the board. These board definitions will use the "
"`skip_verify` flag, which tells the flashing tool to stop after writing the "
"firmware to the SD Card so that the board can be manually power-cycled and "
"the verification step deferred until that's complete."
msgstr ""
"[正如在注意事项中提到的那样](#caveats)，引导程序使用SDIO模式访问它们的SD卡的"
"控制板需要对控制板进行电源循环，特别是SD卡本身，以便从将文件写入SD卡时使用的S"
"PI模式切换回SDIO模式，以便引导程序将其刷写到板子上。这些板子的定义将使用`skip"
"_verify` 标志，它告诉刷写工具在将固件写入SD卡后停止，以便控制板可以手动断电并"
"推迟验证步骤直到完成。"

#: docs/SDCard_Updates.md:block 34 (paragraph)
msgid ""
"There are two scenarios -- one with the RPi Host running on a separate power"
" supply and the other when the RPi Host is running on the same power supply "
"as the main board being flashed. The difference is whether or not it's "
"necessary to also shutdown the RPi and then `ssh` again after the flashing "
"is complete in order to do the verification step, or if the verification can"
" be done immediately. Here's examples of the two scenarios:"
msgstr ""
"有两种情况 - 一种是RPi主机在独立电源上运行，另一种是RPi主机与被刷写的主板在同"
"一电源上运行。区别在于是否有必要同时关闭RPi，然后在刷写完成后再次`ssh` "
"，以进行验证步骤，或者是否可以立即进行验证。下面是这两种情况的例子："

#: docs/SDCard_Updates.md:block 35 (header)
msgid "SDIO Programming with RPi on Separate Power Supply"
msgstr "RPi有独立的电源时进行SDIO刷写"

#: docs/SDCard_Updates.md:block 36 (paragraph)
msgid ""
"A typical session with the RPi on a Separate Power Supply looks like the "
"following. You will, of course, need to use your proper device path and "
"board name:"
msgstr "使用独立电源的RPi的典型流程看起来像下面这样。当然，你需要使用适当的设备路径和"
"控制板名称："

#: docs/SDCard_Updates.md:block 37 (code)
msgid ""
"sudo service klipper stop\n"
"cd ~/klipper\n"
"git pull\n"
"make clean\n"
"make menuconfig\n"
"make\n"
"./scripts/flash-sdcard.sh /dev/ttyACM0 btt-octopus-f446-v1\n"
"[[[manually power-cycle the printer board here when instructed]]]\n"
"./scripts/flash-sdcard.sh -c /dev/ttyACM0 btt-octopus-f446-v1\n"
"sudo service klipper start\n"
msgstr ""
"sudo service klipper stop\n"
"cd ~/klipper\n"
"git pull\n"
"make clean\n"
"make menuconfig\n"
"make\n"
"./scripts/flash-sdcard.sh /dev/ttyACM0 btt-octopus-f446-v1\n"
"[[[在提示时手动重启打印机控制板]]]\n"
"./scripts/flash-sdcard.sh -c /dev/ttyACM0 btt-octopus-f446-v1\n"
"sudo service klipper start\n"

#: docs/SDCard_Updates.md:block 38 (header)
msgid "SDIO Programming with RPi on the Same Power Supply"
msgstr "对与RPi在同一电源上的主板进行SDIO刷写"

#: docs/SDCard_Updates.md:block 39 (paragraph)
msgid ""
"A typical session with the RPi on the Same Power Supply looks like the "
"following. You will, of course, need to use your proper device path and "
"board name:"
msgstr "RPI和控制板在同一电源上的典型会话看起来像下面这样。当然，你需要使用正确的设备"
"路径和控制板名称："

#: docs/SDCard_Updates.md:block 40 (code)
msgid ""
"sudo service klipper stop\n"
"cd ~/klipper\n"
"git pull\n"
"make clean\n"
"make menuconfig\n"
"make\n"
"./scripts/flash-sdcard.sh /dev/ttyACM0 btt-octopus-f446-v1\n"
"sudo shutdown -h now\n"
"[[[wait for the RPi to shutdown, then power-cycle and ssh again to the RPi when it restarts]]]\n"
"sudo service klipper stop\n"
"cd ~/klipper\n"
"./scripts/flash-sdcard.sh -c /dev/ttyACM0 btt-octopus-f446-v1\n"
"sudo service klipper start\n"
msgstr ""
"sudo service klipper stop\n"
"cd ~/klipper\n"
"git pull\n"
"make clean\n"
"make menuconfig\n"
"make\n"
"./scripts/flash-sdcard.sh /dev/ttyACM0 btt-octopus-f446-v1\n"
"sudo shutdown -h now\n"
"[[[等RPI关机后，断电重启后再次 ssh 连接到 RPi]]]\n"
"sudo service klipper stop\n"
"cd ~/klipper\n"
"./scripts/flash-sdcard.sh -c /dev/ttyACM0 btt-octopus-f446-v1\n"
"sudo service klipper start\n"

#: docs/SDCard_Updates.md:block 41 (paragraph)
msgid ""
"In this case, since the RPi Host is being restarted, which will restart the "
"`klipper` service, it's necessary to stop `klipper` again before doing the "
"verification step and restart it after verification is complete."
msgstr ""
"在这种情况下，由于RPi主机被重新启动，这将重新启动`klipper` "
"服务，所以有必要在做验证步骤之前再次停止`klipper` "
"，并在验证完成后重新启动服务。"

#: docs/SDCard_Updates.md:block 42 (header)
msgid "SDIO to SPI Pin Mapping"
msgstr "SDIO到SPI引脚映射"

#: docs/SDCard_Updates.md:block 43 (paragraph)
msgid ""
"If your board's schematic uses SDIO for its SD Card, you can map the pins as"
" described in the chart below to determine the compatible Software SPI pins "
"to assign in the `board_defs.py` file:"
msgstr ""
"如果你的控制板原理图显示它使用SDIO的SD卡，你可以按照下图描述的方式映射引脚，"
"以确定在`board_defs.py` 文件中分配的兼容的软件SPI引脚："

#: docs/SDCard_Updates.md:block 44 (table)
msgid "SD Card Pin"
msgstr "SD 卡引脚"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "Micro SD Card Pin"
msgstr "MicroSD卡引脚"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "SDIO Pin Name"
msgstr "SDIO 引脚名称"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "SPI Pin Name"
msgstr "SPI引脚名称"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "9"
msgstr "9"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "1"
msgstr "1"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "DATA2"
msgstr "DATA2"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "None (PU)*"
msgstr "None (PU)*"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "2"
msgstr "2"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "CD/DATA3"
msgstr "CD/DATA3"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "CS"
msgstr "CS"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "3"
msgstr "3"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "CMD"
msgstr "CMD"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "MOSI"
msgstr "MOSI"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "4"
msgstr "4"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "+3.3V (VDD)"
msgstr "+3.3V (VDD)"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "5"
msgstr "5"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "CLK"
msgstr "CLK"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "SCLK"
msgstr "SCLK"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "6"
msgstr "6"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "GND (VSS)"
msgstr "GND (VSS)"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "7"
msgstr "7"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "DATA0"
msgstr "DATA0"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "MISO"
msgstr "MISO"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "8"
msgstr "8"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "DATA1"
msgstr "DATA1"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "N/A"
msgstr "N/A"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "Card Detect (CD)"
msgstr "卡片检测 (CD)"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "10"
msgstr "10"

#: docs/SDCard_Updates.md:block 44 (table)
msgid "GND"
msgstr "GND"

#: docs/SDCard_Updates.md:block 45 (paragraph)
msgid "\\* None (PU) indicates an unused pin with a pull-up resistor"
msgstr "\\* None (PU)表示有上拉电阻的未使用引脚"

#: docs/SDCard_Updates.md:block 25 (unordered list)
msgid ""
"`mcu`: The mcu type. This can be retrieved after configuring the build via "
"`make menuconfig` by running `cat .config | grep CONFIG_MCU`. This field is "
"required."
msgstr ""
"`mcu`：微控制器类型。这可以在使用`make menuconfig`配置构建配置后通过运行`cat "
".config | grep CONFIG_MCU`获取。 此字段是必需的。"

#: docs/SDCard_Updates.md:block 25 (unordered list)
msgid ""
"`spi_bus`: The SPI bus connected to the SD Card. This should be retrieved "
"from the board's schematic. This field is required."
msgstr "`spi_bus`：连接到 SD 卡的 SPI 总线。 这应该可以在控制板的原理图中找到。 "
"此字段是必需的。"

#: docs/SDCard_Updates.md:block 25 (unordered list)
msgid ""
"`cs_pin`: The Chip Select Pin connected to the SD Card. This should be "
"retrieved from the board schematic. This field is required."
msgstr "`cs_pin`：连接到 SD 卡的芯片选择引脚。 可以在控制板的原理图中找到。 "
"此字段是必需的。"

#~ msgid ""
#~ "`mcu`: The mcu type. This can be retrevied after configuring the build via "
#~ "`make menuconfig` by running `cat .config | grep CONFIG_MCU`. This field is "
#~ "required."
#~ msgstr ""
#~ "`mcu`：微控制器类型。这可以在使用`make menuconfig`配置构建配置后通过运行`cat .config | grep "
#~ "CONFIG_MCU`获取。 此字段是必需的。"

#~ msgid ""
#~ "`spi_bus`: The SPI bus connected to the SD Card. This should be retreived "
#~ "from the board's schematic. This field is required."
#~ msgstr "`spi_bus`：连接到 SD 卡的 SPI 总线。 这应该从电路板的原理图中检索。 此字段是必需的。"

#~ msgid ""
#~ "`cs_pin`: The Chip Select Pin connected to the SD Card. This should be "
#~ "retreived from the board schematic. This field is required."
#~ msgstr "`cs_pin`：连接到 SD 卡的芯片选择引脚。 这应该从电路板原理图中检索。 此字段是必需的。"

#~ msgid ""
#~ "Only boards that use SPI for SD Card communication are supported. Boards "
#~ "that use SDIO, such as the Flymaker Flyboard and MKS Robin Nano V1/V2, will "
#~ "not work."
#~ msgstr ""
#~ "仅支持使用 SPI 进行 SD 卡通信的板。 使用 SDIO 的板，例如 Flymaker Flyboard 和 MKS Robin Nano "
#~ "V1/V2，将无法工作。"

#~ msgid ""
#~ "`current_firmware_path` The path on the SD Card where the renamed firmware "
#~ "file is located after a successful flash. The default is `firmware.cur`."
#~ msgstr "`current_firmware_path` 成功刷新后重命名的固件文件所在的 SD 卡上的路径。 默认是`firmware.cur`。"

#~ msgid ""
#~ "If software SPI is required the `spi_bus` field should be set to `swspi` and"
#~ " the following additional field should be specified:"
#~ msgstr "如果需要软件 SPI，`spi_bus` 字段应设置为 `swspi`，并应指定以下附加字段："

#~ msgid ""
#~ "It should be exceedingly rare that Software SPI is necessary, typically only"
#~ " boards with design errors will require it. The `btt-skr-pro` board "
#~ "definition provides an example."
#~ msgstr "软件 SPI 是必要的应该是非常罕见的，通常只有设计错误的板才会需要它。 `btt-skr-pro` 板定义提供了一个示例。"

#~ msgid ""
#~ "./scripts/flash-sdcard.sh -h\n"
#~ "SD Card upload utility for Klipper\n"
#~ "\n"
#~ "usage: flash_sdcard.sh [-h] [-l] [-b <baud>] [-f <firmware>]\n"
#~ "                       <device> <board>\n"
#~ "\n"
#~ "positional arguments:\n"
#~ "  <device>        device serial port\n"
#~ "  <board>         board type\n"
#~ "\n"
#~ "optional arguments:\n"
#~ "  -h              show this message\n"
#~ "  -l              list available boards\n"
#~ "  -b <baud>       serial baud rate (default is 250000)\n"
#~ "  -f <firmware>   path to klipper.bin\n"
#~ msgstr ""
#~ "./scripts/flash-sdcard.sh -h\n"
#~ "Klipper SD卡更新工具\n"
#~ "\n"
#~ "使用方法：flash_sdcard.sh [-h] [-l] [-b <baud>] [-f <firmware>]\n"
#~ "                       <device> <board>\n"
#~ "\n"
#~ "位置参数：\n"
#~ "  <device>        设备串口\n"
#~ "  <board>         主板类型\n"
#~ "\n"
#~ "可选参数：\n"
#~ "  -h              显示这条信息\n"
#~ "  -l              列出可用主板\n"
#~ "  -b <baud>       串口波特率（默认为250000）\n"
#~ "  -f <firmware>   klipper.bin文件路径\n"
